name: GHA CI
on:
  push:
    branches-ignore:
      - 'dependabot**'
    tags:
      - '*'
    paths-ignore:
      - '**/lsan.supp'
      - 'buildScripts/travis/*'
      - 'buildScripts/azure/*'
      - 'buildScripts/docker/*'
      - 'azure-pipelines.yml'
      - '.cirrus.yml'
      - '.travis.yml'
      - '.mergify.yml'
      - 'Brewfile'
      - '**/*.html'
      - '**/*.txt'
      - '**/*.md'
      - 'installer/packages/**/meta/prebuild-mac.sh'
      - 'installer/packages/**/meta/prebuild-linux-gnu.sh'
      - '**/*.dockerfile'
      - '**/*.Dockerfile'
      - '**/Dockerfile'
      - '**/Dockerfile.*'
      - 'plugins/robots/checker/scripts/build-checker-installer.sh'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
    defaults:
      run:
        shell: msys2 {0}
    steps:

      - name: Cancel Previous Workflow Runs
        uses: n1hility/cancel-previous-runs@v2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          msystem: MINGW32

      - name: Download packages to msys2
        run: |
            ARCH=32
            PLATFORM=i686
            pacman --verbose --noconfirm -S msys/zlib-devel dos2unix ccache rsync unzip expect mingw$ARCH/mingw-w64-$PLATFORM-libzip mingw$ARCH/mingw-w64-$PLATFORM-libusb mingw$ARCH/mingw-w64-$PLATFORM-zlib mingw$ARCH/mingw-w64-$PLATFORM-pkg-config
            which expect

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Create test file
        run: |
          echo install >> iaminstaller.txt

      - name: Deploy
#        run: ./exp ${{ secrets.DL_PASSWORD }} rsync -v --rsh="ssh -o StrictHostKeyChecking=no" iaminstaller.txt ${{ secrets.DL_USERNAME }}@${{ secrets.DL_HOST }}:~/dl/test/
        run: ./exp ${{ secrets.DL_PASSWORD }} ssh -tt -o StrictHostKeyChecking=no ${{ secrets.DL_USERNAME }}@${{ secrets.DL_HOST }}
